var searchIndex = JSON.parse('{\
"libcry":{"doc":"Cry is a advance cryptography library based on ECC and â€¦","t":[3,4,6,3,3,6,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,16,8,8,16,8,16,16,8,10,10,10,10,10,10,10,10,10,10,10],"n":["Code","Error","PointBytes","PrivateKey","PublicKey","Result","ScalarBytes","SharedKey","Signature","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","derive","derive","exchange","fmt","from","from","from","from","from","from","from_seed","into","into","into","into","into","into","new","prelude","r","s","to_public","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Bytes","Curve","Error","FromToBytes","Point","Point","Scalar","Scalar","Scalar","Sponge","absorb","add","add","apply_f","basepoint","create_from_bytes","from_bytes","mul","mul","squeeze","to_bytes"],"q":["libcry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libcry::prelude","","","","","","","","","","","","","","","","","","","",""],"d":["Seed or code for generate key.","","","Private key","Public key","","","Shared key generate by DH.","Schnorr signature","","","","","","","","","","","","","","Derive sub key","Derive sub public key","Do DH exchange","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generate private key from seed.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Define prelude for libcry.","","","Build public key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,2,3,5,4,2,12,6,3,5,4,2,12,6,3,5,2,6,3,5,4,2,12,6,3,3,5,4,2,12,6,4,0,12,12,3,3,5,4,2,12,6,3,5,4,2,12,6,3,5,4,2,12,6,13,0,13,0,0,1,0,1,14,0,15,16,14,15,14,13,13,16,14,15,13],"f":[0,0,0,0,0,0,0,0,0,[[[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1]],4],[[3,[1]]]],[[[5,[1]],4],[[5,[1]]]],[[3,[5,[1]]],[[2,[1]]]],[[6,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[3,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[1]]],[[4,[1]]]],0,0,0,[[[3,[1]]],[[5,[1]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[]],[[]],[[]],[[]]],"p":[[8,"Curve"],[3,"SharedKey"],[3,"PrivateKey"],[3,"Code"],[3,"PublicKey"],[4,"Error"],[3,"Formatter"],[6,"Result"],[6,"ScalarBytes"],[4,"Result"],[3,"TypeId"],[3,"Signature"],[8,"FromToBytes"],[8,"Point"],[8,"Sponge"],[8,"Scalar"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
